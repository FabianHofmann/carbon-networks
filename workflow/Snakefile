# Merge subworkflow configs and main config
configfile: "config/config.pypsa-eur.yaml"
configfile: "config/config.pypsa-eur-sec.yaml"
configfile: "config/config.yaml"

from shutil import copyfile
copyfile("config/config.pypsa-eur.yaml", "workflow/subworkflows/pypsa-eur/config.yaml")
copyfile("config/config.pypsa-eur-sec.yaml", "workflow/subworkflows/pypsa-eur-sec/config.yaml")

localrules:
    all,
    report,
    clean,

subworkflow pypsaeur:
    configfile:
        "config/config.pypsa-eur.yaml"
    workdir:
        "subworkflows/pypsa-eur"
    snakefile:
        "subworkflows/pypsa-eur/Snakefile"


subworkflow pypsaeursec:
    configfile:
        "config/config.pypsa-eur-sec.yaml"
    workdir:
        "subworkflows/pypsa-eur-sec"
    snakefile:
        "subworkflows/pypsa-eur-sec/Snakefile"


SDIR = config["summary_dir"] + "/" + config["run"]
RDIR = config["results_dir"] + config["run"]
CDIR = config["costs_dir"]


rule solve_all_networks:
    input:
        pypsaeursec(
            expand(
                RDIR
                + "/postnetworks/elec_s{simpl}_{clusters}_lv{lv}_{opts}_{sector_opts}_{planning_horizons}.nc",
                **config["scenario"]
            ), 
        ),
        pypsaeursec(
            SDIR + '/graphs/costs.pdf',
        )


# rule test:
#     input:
#         pypsaeursec("subworkflows/pypsa-eur-sec/results")


rule report:
    message:
        "Compile report."
    input:
        tex="report/report.tex",
        bib="report/references.bib",
    output:
        "report/report.pdf",
    shell:
        """
        pdflatex {input.tex}
        bibtex {input.bib})
        pdflatex {input.tex}
        pdflatex {input.tex}
        """


rule dag:
    message:
        "Plot dependency graph of the workflow."
    output:
        dot="resources/dag.dot",
        pdf="resources/dag.pdf",
    shell:
        """
        snakemake --rulegraph > {output.dot}
        dot -Tpdf -o {output.pdf} {output.dot}
        """


rule clean:
    message:
        "Remove all build results but keep downloaded data."
    run:
        import shutil

        shutil.rmtree("resources")
        shutil.rmtree("results")
        print("Data downloaded to data/ has not been cleaned.")
